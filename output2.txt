------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
										Integration Architecture Document
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
												INFO:
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

CODE DEPENDENCIES : API-Call(INFO)
{'description': 'Detected a Call to an API', 'severity': 'INFO'}
+----+------------------+---------------+---------------------------------------------------------------------+
|    | match_position   | match_lines   | match_string                                                        |
+====+==================+===============+=====================================================================+
|  0 | (1, 67)          | (1, 2)        | let request = new XMLHttpRequest();                                 |
|    |                  |               | request.open("GET", "https://jsonplaceholder.typicode.com/users");  |
+----+------------------+---------------+---------------------------------------------------------------------+
|  1 | (7, 58)          | (13, 13)      | await fetch('https://jsonp1aceholder.typicode.com/users')           |
+----+------------------+---------------+---------------------------------------------------------------------+
|  2 | (1, 67)          | (22, 25)      | var request = new XMLHttpRequest()                                  |
|    |                  |               |                                                                     |
|    |                  |               | // Open a new connection, using the GET request on the URL endpoint |
|    |                  |               | request.open('GET', 'https://ghibliapi.herokuapp.com/films', true)  |
+----+------------------+---------------+---------------------------------------------------------------------+
|  3 | (1, 4)           | (34, 40)      | const express = require('express');                                 |
|    |                  |               |                                                                     |
|    |                  |               | request.send()                                                      |
|    |                  |               | const api = express();                                              |
|    |                  |               | api.listen(3000, () => {                                            |
|    |                  |               |   console.log('API up and running!');                               |
|    |                  |               | });                                                                 |
+----+------------------+---------------+---------------------------------------------------------------------+
Total Dependencies : 4



------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
											Rule Violation:
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------


------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
												WARNINGS:
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Vulnerability Detected : FTP request unsecured in php(WARNING)
{'description': "FTP allows for unencrypted file transfers. Consider using an encrypted alternative like 'ssh2_scp_send('location')'", 'severity': 'WARNING'}
+----+------------------+---------------+----------------------------------------------------------------------+
|    | match_position   | match_lines   | match_string                                                         |
+====+==================+===============+======================================================================+
|  0 | (12, 36)         | (4, 4)        | $conn_id = ftp_connect($ftp_server);                                 |
+----+------------------+---------------+----------------------------------------------------------------------+
|  1 | (17, 68)         | (7, 7)        | $login_result = ftp_login($conn_id, $ftp_user_name, $ftp_user_pass); |
+----+------------------+---------------+----------------------------------------------------------------------+
Count of possible Vulnerabilities : 2
PHP Version :  PHP 8.1.2-1ubuntu2.6 (cli) (built: Sep 15 2022 11:30:49) (NTS)
Copyright (c) The PHP Group
Zend Engine v4.1.2, Copyright (c) Zend Technologies
    with Zend OPcache v8.1.2-1ubuntu2.6, Copyright (c), by Zend Technologies



Vulnerability Detected : SQL injection(WARNING)
{'description': "Detected SQL statement that can lead to SQL injection. In order to prevent SQL injection, used parameterized queries or prepared statements instead. You can use parameterized statements like con.query('SELECT $1 from table', [userinput])", 'severity': 'WARNING'}
+----+------------------+---------------+-----------------------------+
|    | match_position   | match_lines   | match_string                |
+====+==================+===============+=============================+
|  0 | (11, 14)         | (67, 67)      | con.query(stm)              |
+----+------------------+---------------+-----------------------------+
|  1 | (13, 16)         | (69, 69)      | con.execute(stm,requiredvs) |
+----+------------------+---------------+-----------------------------+
Count of possible Vulnerabilities : 2



------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
												ERRORS:
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Vulnerability Detected : detect-eval-with-expression(ERROR)
{'description': 'Detected use of dynamic execution of JavaScript which may come from user-input, which can lead to Cross-Site-Scripting (XSS). Where possible avoid including user-input in functions which dynamically execute user-input.\n', 'severity': 'ERROR'}
+----+------------------+---------------+------------------------------------------+
|    | match_position   | match_lines   | match_string                             |
+====+==================+===============+==========================================+
|  0 | (1, 14)          | (43, 43)      | eval('alert')                            |
+----+------------------+---------------+------------------------------------------+
|  1 | (1, 21)          | (46, 46)      | window.eval('alert')                     |
+----+------------------+---------------+------------------------------------------+
|  2 | (1, 41)          | (50, 50)      | window.eval(`alert('${location.href}')`) |
+----+------------------+---------------+------------------------------------------+
Count of Vulnerabilities : 3


